/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalpatienttrackerproject;
import java.io.File;
import java.io.FileNotFoundException;

import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Hilal Demir
 */
public class LoginStaff extends javax.swing.JFrame {

    String IDStaff;
    /**
     * Creates new form LoginStaff
     */
    public LoginStaff() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Please enter your name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Please enter your lastname:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Please select your birthday:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Please select your gender:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "male" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Please enter your staff ID:");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Please enter your password:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("SIGN UP");

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Please enter your phone number:");

        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField8KeyPressed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Please select an ID which starts with;\na for Doctor\nb for Nurse\nc for Lab Technician\nd for Pharmacist\ne for Secretary");
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("ID Check");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Go back to Login screen");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12)
                    .addComponent(jTextField1)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(jTextField3)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(jTextField8)
                    .addComponent(datePicker1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButton2)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {                                         
            String name=jTextField1.getText();
            //I used the code from the lesson videos for checking whether the field is empty or not
            boolean nameCheck=name.isEmpty();
            if(nameCheck)
            {
                JOptionPane.showMessageDialog(this,"Name field is empty, please enter your name!\n","Error\n",JOptionPane.ERROR_MESSAGE);
            }
            String surname=jTextField2.getText();
            boolean surnameCheck=surname.isEmpty();
            if(surnameCheck)
            {
                JOptionPane.showMessageDialog(this,"Surname field is empty, please enter your Surname!\n","Error\n",JOptionPane.ERROR_MESSAGE);
            }
            String telno=jTextField8.getText();
            boolean telCheck=telno.isEmpty();
            if(telCheck)
            {
                JOptionPane.showMessageDialog(this,"Phone number field is empty, please enter your phone number!\n","Error\n",JOptionPane.ERROR_MESSAGE);
            }
            String id=jTextField3.getText();
            boolean idCheck=id.isEmpty();
            if(idCheck)
            {
                JOptionPane.showMessageDialog(this,"Staff ID field is empty, please enter your Staff ID!\n","Error\n",JOptionPane.ERROR_MESSAGE);
            }
            
            
            char[] a=jPasswordField1.getPassword();
            String pass=String.valueOf(a);
            boolean passCheck=pass.isEmpty();
            if(passCheck)
            {
                JOptionPane.showMessageDialog(this,"Password field is empty, please enter your Password!\n","Error\n",JOptionPane.ERROR_MESSAGE);
            }
            String gender=jComboBox1.getSelectedItem().toString();
            String birthday=datePicker1.getDateStringOrEmptyString();
            //ZoneId defaultZoneId = ZoneId.systemDefault();
            //java.util.Date date = Date.from(birthday.atStartOfDay(defaultZoneId).toInstant());
            Staff newStaff=new Staff(id,name,surname,telno,gender,birthday,pass);
            
            this.IDStaff=newStaff.getStaffID();
            FileWriter allStaffID;
            FileWriter PhonebookStaff;
            
            FileWriter writer;
            File file=new File("All Doctor List.txt");
            if(!file.exists() || file.length() == 0)
            {
                FileWriter x=new FileWriter("All Doctor List.txt",true);
                x.write("Name"+","+"Surname"+","+"ID"+System.lineSeparator());
                x.close();
            }
            
            try {
                File no=new File("StaffPhonebook.txt");
            if(!no.exists() || no.length() == 0)
            {
                FileWriter noa=new FileWriter("StaffPhonebook.txt",true);
                noa.write("Name"+","+"Surname"+","+"Number"+System.lineSeparator());
                noa.close();
            }
                PhonebookStaff=new FileWriter("StaffPhonebook.txt",true);

                PhonebookStaff.write(newStaff.getName()+","+newStaff.getLastname()+","+newStaff.getMobilenumber()+System.lineSeparator());
                allStaffID= new FileWriter("AllStafIDS.txt",true);
                allStaffID.write(newStaff.getStaffID()+",");
                // I searched from here to write into existing file/updating a file
                //https://stackoverflow.com/questions/19681163/update-an-existing-file-in-java
                writer = new FileWriter(newStaff.getStaffID()+ ".txt",true);
                writer.write(newStaff.getStaffID() + System.lineSeparator());
                writer.write(newStaff.getName() + System.lineSeparator());
                writer.write(newStaff.getLastname() + System.lineSeparator());
                writer.write(newStaff.getGender() + System.lineSeparator());
                writer.write(newStaff.getBirthday() + System.lineSeparator());
                writer.write(newStaff.getPassword() + System.lineSeparator());
                writer.write(newStaff.getMobilenumber() + System.lineSeparator());
                allStaffID.close();          
                PhonebookStaff.close();
                writer.close();
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame1.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            char[] ch = id.toCharArray();
            switch (ch[0]) {
                case 'a':
                    Doctor doc=new Doctor(id,name,surname,telno,gender,birthday,pass);
                    FileWriter Doctors;
                    try {
                         File file1=new File("Doctor List.txt");
                         if(!file1.exists() || file1.length() == 0)
                           {
                                FileWriter x=new FileWriter("Doctor List.txt",true);
                                x.write("Name"+","+"Surname"+","+"ID"+System.lineSeparator());
                                x.close();
                           }
                        Doctors=new FileWriter("Doctor List.txt",true);
                        Doctors.write(doc.getName()+","+doc.getLastname()+","+doc.StaffID+System.lineSeparator());
                        Doctors.close();
                    } catch (IOException ex) {
                        Logger.getLogger(LoginStaff.class.getName()).log(Level.SEVERE, null, ex);
                    }   break;
                case 'b':
                    Nurse nur=new Nurse(id,name,surname,telno,gender,birthday,pass);
                    FileWriter Nurses;
                    try {
                        File file1=new File("Nurse List.txt");
                         if(!file1.exists() || file1.length() == 0)
                           {
                                FileWriter x=new FileWriter("Nurse List.txt",true);
                                x.write("Name"+","+"Surname"+","+"ID"+System.lineSeparator());
                                x.close();
                           }
                        Nurses=new FileWriter("Nurse List.txt",true);
                        Nurses.write(nur.getName()+","+nur.getLastname()+","+nur.getStaffID()+System.lineSeparator());
                        Nurses.close();
                    } catch (IOException ex) {
                        Logger.getLogger(LoginStaff.class.getName()).log(Level.SEVERE, null, ex);
                    }   break;
                case 'c':
                    LabTechnician labtec=new LabTechnician(id,name,surname,telno,gender,birthday,pass);
                    FileWriter LabTecs;
                    File file1=new File("Lab Technician List.txt");
                     if(!file1.exists() || file1.length() == 0)
                       {
                                FileWriter x=new FileWriter("Lab Technician List.txt",true);
                                x.write("Name"+","+"Surname"+","+"ID"+System.lineSeparator());
                                x.close();
                           }        
                    LabTecs=new FileWriter("Lab Technician List.txt",true);
                    LabTecs.write(labtec.getName()+","+labtec.getLastname()+","+labtec.StaffID+System.lineSeparator());
                    LabTecs.close();
                    break;
                case 'd':
                    Pharmacist pha=new Pharmacist(id,name,surname,telno,gender,birthday,pass);
                    FileWriter Phar;
                    File file2=new File("Pharmacist List.txt");
                     if(!file2.exists() || file2.length() == 0)
                       {
                                FileWriter x=new FileWriter("Pharmacist List.txt",true);
                                x.write("Name"+","+"Surname"+","+"ID"+System.lineSeparator());
                                x.close();
                           }  
                    Phar=new FileWriter("Pharmcist List.txt",true);
                    Phar.write(pha.getName()+","+pha.getLastname()+","+pha.getStaffID()+System.lineSeparator());
                    Phar.close();
                    break;
                case 'e':
                    Secretary sec=new Secretary(id,name,surname,telno,gender,birthday,pass);
                    FileWriter Secs;
                    File file3=new File("Secretary List.txt");
                     if(!file3.exists() || file3.length() == 0)
                       {
                                FileWriter x=new FileWriter("Secretary List.txt",true);
                                x.write("Name"+","+"Surname"+","+"ID"+System.lineSeparator());
                                x.close();
                           }  
                    Secs=new FileWriter("Secretariy List.txt",true);
                    Secs.write(sec.getName()+","+sec.getLastname()+","+sec.getStaffID()+System.lineSeparator());
                    Secs.close();
                    break;
                default: 
                    break;
            }
            new LoginFrameStaff().setVisible(true);
            dispose();
        } catch (IOException ex) {
            Logger.getLogger(LoginStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           // I used the code from the comment section of this:
            //https://stackoverflow.com/questions/20303944/java-how-to-search-a-word-from-text-file
        Scanner txtscan;
        jTextField3ActionPerformed(evt);
        try {
            txtscan = new Scanner(new File("AllStafIDS.txt"));
            while(txtscan.hasNextLine()){
                String str = txtscan.nextLine();
                if(str.indexOf(this.IDStaff) != -1){
                    JOptionPane.showMessageDialog(this,"The ID is already used!\n","Error\n",JOptionPane.ERROR_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(this,"The ID can be used!\n","Success\n",JOptionPane.INFORMATION_MESSAGE);
                }
                
            }   
            txtscan.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        this.IDStaff=jTextField3.getText();
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new LoginFrameStaff().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyPressed
        // I used that page fto getting only integer values from user
       //https://www.tutorialspoint.com/how-can-we-make-jtextfield-accept-only-numbers-in-java
        String value = jTextField8.getText();
        int l = value.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            jTextField8.setEditable(true);
        } else {
            jTextField8.setEditable(false);
            JOptionPane.showMessageDialog(this,"* Enter only numeric digits(0-9)\"n","Error\n",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTextField8KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
